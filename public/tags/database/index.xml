<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Database on Eike Rabetian</title>
    <link>/tags/database/</link>
    <description>Recent content in Database on Eike Rabetian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 17 Nov 2020 15:59:13 -0400</lastBuildDate>
    
	<atom:link href="/tags/database/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How To Count Your Postgres Tables In Django</title>
      <link>/blog/fifth/</link>
      <pubDate>Tue, 17 Nov 2020 15:59:13 -0400</pubDate>
      
      <guid>/blog/fifth/</guid>
      <description>When you want to do a full count on your tables in django, you often do it like this:
MyModel.objects.count()  which will produce a sql like this:
SELECT COUNT(*) AS &amp;quot;__count&amp;quot; FROM &amp;quot;myapp_mymodel&amp;quot;  Which is pretty fine most of the time, but what happens if you have a lot of data and rows on your table? Then for instance in my experience it took 20 seconds to count all the rows in a table!</description>
    </item>
    
  </channel>
</rss>