<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Engineering on Eike Rabetian</title>
    <link>/tags/engineering/</link>
    <description>Recent content in Engineering on Eike Rabetian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 17 Nov 2020 15:59:13 -0400</lastBuildDate>
    
	<atom:link href="/tags/engineering/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How To Count Your Postgres Tables In Django, Fast!</title>
      <link>/blog/fifth/</link>
      <pubDate>Tue, 17 Nov 2020 15:59:13 -0400</pubDate>
      
      <guid>/blog/fifth/</guid>
      <description>When you want to do a full count on your tables in django, you often do it like this:
MyModel.objects.count()  which will produce a sql like this:
SELECT COUNT(*) AS &amp;quot;__count&amp;quot; FROM &amp;quot;myapp_mymodel&amp;quot;  Which is pretty fine most of the time, but what happens if you have a lot of data and rows on your table? Then for instance in my experience it took 20 seconds to count all the rows in a table!</description>
    </item>
    
    <item>
      <title>Docker, Celery and Queues</title>
      <link>/blog/third/</link>
      <pubDate>Fri, 30 Oct 2020 15:59:13 -0400</pubDate>
      
      <guid>/blog/third/</guid>
      <description>There are a lot of blogs on how to setup docker and celery for development, but none of them are really practical or like a real world example of development.
So I&amp;rsquo;m gonna show how I setup celery with docker while I have a few different celery queues for development.
Setup Celery and Docker when you only have one queue :
Dockerfile FROM python:3.8 ENV LANG=C.UTF-8 LC_ALL=C.UTF-8 PYTHONUNBUFFERED=1 WORKDIR / COPY requirements.</description>
    </item>
    
    <item>
      <title>Not Married To Any Tech Stack</title>
      <link>/blog/fourth/</link>
      <pubDate>Tue, 20 Oct 2020 15:59:13 -0400</pubDate>
      
      <guid>/blog/fourth/</guid>
      <description>I&amp;rsquo;ve done some observation. If you look at job postings in big companies, they always post their job positions with the title &amp;ldquo;Software engineer&amp;rdquo; or &amp;ldquo;Senior software engineer&amp;rdquo;. While if you look at other companies which are just startups or not that big or might not be very famous, they always post their job offers with the title &amp;ldquo;{Some_Language} developer&amp;rdquo; or &amp;ldquo;Senior {Some_Language} developer&amp;rdquo;.
Now what&amp;rsquo;s the difference here? A really good software engineer isn&amp;rsquo;t bound to any specific tool or technology!</description>
    </item>
    
    <item>
      <title>Websites You Need To Bookmark As A Programmer</title>
      <link>/blog/second/</link>
      <pubDate>Sun, 11 Oct 2020 15:59:13 -0400</pubDate>
      
      <guid>/blog/second/</guid>
      <description>I was personally fascinated by the materials in these websites. Every time I look at the work has been done on these sites I get a small tangling feeling in my head. To be honest I&amp;rsquo;m blown away by some of em.
Learning to program isn&amp;rsquo;t just about learning the syntax or how to just combine things together. As Zi Chong Kao says : &amp;ldquo;Learning to program is learning a mental model&amp;rdquo;</description>
    </item>
    
  </channel>
</rss>